<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nongxinle.dao.NxGoodsDao">




	<resultMap id="standardList" type="NxStandardEntity">
		<id property="nxStandardId" column="nx_standard_id"/>
		<result property="nxStandardName" column="nx_standard_name"/>
		<result property="nxStandardFilePath" column="nx_standard_file_path"/>

	</resultMap>
	<resultMap id="father" type="NxGoodsEntity">
		<id property="nxGoodsId" column="f_nx_goods_id"/>
		<result property="nxGoodsName" column="f_nx_goods_name"/>
		<result property="nxGoodsFile" column="f_nx_goods_file"/>
	</resultMap>
	<resultMap id="grandGoods" type="NxGoodsEntity">
		<id property="nxGoodsId" column="grand_nx_goods_id"/>
		<result property="nxGoodsName" column="grand_nx_goods_name"/>
		<result property="nxGoodsFile" column="grand_nx_goods_file"/>
	</resultMap>
	<resultMap id="greatGrandGoods" type="NxGoodsEntity">
		<id property="nxGoodsId" column="greatgrand_nx_goods_id"/>
		<result property="nxGoodsName" column="greatgrand_nx_goods_name"/>
		<result property="nxGoodsFile" column="greatgrand_nx_goods_file"/>
	</resultMap>

	<resultMap id="nxGoods" type="NxGoodsEntity">
		<id property="nxGoodsId" column="nx_goods_id"/>
		<result property="nxGoodsName" column="nx_goods_name"/>
		<result property="nxGoodsDetail" column="nx_goods_detail"/>
		<result property="nxGoodsFile" column="nx_goods_file"/>
		<result property="nxGoodsStandardname" column="nx_goods_standardname"/>
		<result property="nxGoodsFatherId" column="nx_goods_father_id"/>
		<result property="nxGoodsStandardAmount" column="nx_goods_standard_amount"/>
		<result property="nxGoodsDetail" column="nx_goods_detail"/>
		<result property="nxGoodsPinyin" column="nx_goods_pinyin"/>
		<result property="nxGoodsPy" column="nx_goods_py"/>
		<association property="fatherGoods" resultMap="father"/>
		<association property="grandGoods" resultMap="grandGoods"/>
		<association property="greatGrandGoods" resultMap="greatGrandGoods"/>
		<collection property="nxGoodsStandardEntities" resultMap="standardList"/>
	</resultMap>

	<select id="queryObject" resultMap="nxGoods">
		select g.nx_goods_id 'nx_goods_id', g.nx_goods_name 'nx_goods_name', g.nx_goods_detail 'nx_goods_detail',
		       g.nx_goods_standardname 'nx_goods_standardname', g.nx_goods_file 'nx_goods_file',
		       g.nx_goods_standard_amount 'nx_goods_standard_amount', g.nx_goods_father_id 'nx_goods_father_id',
		       g.nx_goods_pinyin 'nx_goods_pinyin', g.nx_goods_py,
		       f.nx_goods_id 'f_nx_goods_id', f.nx_goods_name 'f_nx_goods_name', f.nx_goods_file 'f_nx_goods_file',
		       grand.nx_goods_id 'grand_nx_goods_id', grand.nx_goods_name 'grand_nx_goods_name',
		       greatgrand.nx_goods_id 'greatgrand_nx_goods_id', greatgrand.nx_goods_name 'greatgrand_nx_goods_name',
		       s.nx_standard_name, s.nx_standard_id, s.nx_standard_file_path, s.nx_standard_scale
		from nx_goods as g
		left join nx_standard as s on s.nx_s_goods_id = g.nx_goods_id
		left join nx_goods as f on g.nx_goods_father_id = f.nx_goods_id
		left join nx_goods as grand on grand.nx_goods_id = f.nx_goods_father_id
		left join nx_goods as greatgrand on greatgrand.nx_goods_id = grand.nx_goods_father_id
		where g.nx_goods_id = #{value}
	</select>





	<resultMap id="nxCatalogue" type="NxGoodsEntity">
		<id property="nxGoodsId" column="nx_goods_id"/>
		<result property="nxGoodsName" column="nx_goods_name"/>
		<result property="nxGoodsFile" column="nx_goods_file"/>

		<collection property="nxGoodsEntityList" ofType="NxGoodsEntity">
			<id property="nxGoodsId" column="sub_nx_goods_id"/>
			<result property="nxGoodsName" column="sub_nx_goods_name"/>
			<result property="nxGoodsFile" column="sub_nx_goods_file"/>
			<collection property="nxGoodsEntityList" resultMap="goods"/>
		</collection>
	</resultMap>


	<resultMap id="goods" type="NxGoodsEntity">
		<id property="nxGoodsId" column="goods_id"/>
		<result property="nxGoodsName" column="goods_name"/>
		<result property="nxGoodsStandardname" column="goods_standardname"/>
		<result property="nxGoodsDetail" column="goods_detail"/>
		<result property="nxGoodsSort" column="nx_goods_sort"/>
	</resultMap>




	<select id="queryList" resultMap="nxCatalogue">
		select g.nx_goods_id 'nx_goods_id', g.nx_goods_name 'nx_goods_name' ,
		       gg.nx_goods_id 'sub_nx_goods_id', gg.nx_goods_name 'sub_nx_goods_name', gg.nx_goods_file 'sub_nx_goods_file',
			   ggg.nx_goods_id 'goods_id', ggg.nx_goods_name 'goods_name', ggg.nx_goods_standardname 'goods_standardname',
		       ggg.nx_goods_detail 'goods_detail'
		from  nx_goods as g
		left join nx_goods  as gg on  g.nx_goods_id = gg.nx_goods_father_id
		left join nx_goods  as ggg on gg.nx_goods_id = ggg.nx_goods_father_id
		where g.nx_goods_father_id = 1
		order by g.nx_goods_sort
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from nx_goods 
	</select>


	<resultMap id="nxGoodsCateList" type="NxGoodsEntity">
		<id property="nxGoodsId" column="nx_goods_id"/>
		<result property="nxGoodsName" column="nx_goods_name"/>
		<result property="nxGoodsSort" column="nx_goods_sort"/>

		<collection property="nxGoodsEntityList" ofType="NxGoodsEntity">
			<id property="nxGoodsId" column="sub_nx_goods_id"/>
			<result property="nxGoodsName" column="sub_nx_goods_name"/>
			<result property="nxGoodsStandardname" column="nx_goods_standardname"/>
			<result property="nxGoodsDetail" column="sub_nx_goods_detail"/>
			<result property="nxGoodsSort" column="nx_goods_sort"/>

		</collection>
	</resultMap>

	
	<select id="getNxGoodsCateList" resultMap="nxGoodsCateList">
		select *, g.nx_goods_id 'nx_goods_id', g.nx_goods_name 'nx_goods_name' ,
		       gg.nx_goods_id 'sub_nx_goods_id', gg.nx_goods_name 'sub_nx_goods_name', gg.nx_goods_detail 'sub_nx_goods_detail'
		from  nx_goods as g
		left join nx_goods  as gg on  g.nx_goods_id = gg.nx_goods_father_id
		where g.nx_goods_father_id = 0 order by g.nx_goods_id, gg.nx_goods_id
	</select>

	<select id="getNxFatherGoodsByFatherId" resultType="com.nongxinle.entity.NxGoodsEntity">
		select * from nx_goods where nx_goods_father_id = #{fatherId} order by nx_goods_sort
	</select>



	<select id="queryListWithFatherId" resultMap="nxGoods">
		select * from nx_goods as g
		left join nx_standard as s on g.nx_goods_id = s.nx_s_goods_id
		<if test="fatherId != null">
			where nx_goods_father_id = #{fatherId}
		</if>
		order by nx_goods_py asc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryTotalByFatherId" resultType="java.lang.Integer">
		select count(*) from nx_goods where nx_goods_father_id = #{fatherId}
	</select>
	<select id="querySubNamesByFatherId" resultType="com.nongxinle.entity.NxGoodsEntity">
		select nx_goods_name from nx_goods where nx_goods_father_id = #{nxGoodsId} order by nx_goods_py asc
	</select>
	<select id="queryGoodsCataByType" resultType="com.nongxinle.entity.NxGoodsEntity">
		select * from nx_goods where nx_goods_father_id = #{type}
	</select>

	<select id="queryDownloadGoods" resultType="com.nongxinle.entity.NxGoodsEntity">
	select * from nx_goods where nx_goods_father_id = #{fatherId}

	</select>
    <select id="queryGoodsTree" resultType="com.nongxinle.entity.NxGoodsEntity">
		select * from nx_goods where  nx_goods_father_id &lt; 100
	</select>

    <select id="queryGoodsByFatherId" resultMap="nxGoods">
		select * from  nx_goods as g
		left join nx_standard as s on g.nx_goods_id = s.nx_s_goods_id
		where nx_goods_father_id = #{fatherId}
	</select>
    <select id="queryQuickSearch" resultType="com.nongxinle.entity.NxGoodsEntity">
		select * from nx_goods where (nx_goods_py like concat('%', #{str}, '%')
			or nx_goods_pinyin like concat('%', #{str}, '%')
			or nx_goods_name like concat('%', #{str}, '%'))
	</select>


    <insert id="save" parameterType="com.nongxinle.entity.NxGoodsEntity">
		insert into nx_goods
		(
			`nx_goods_id`, 
			`nx_goods_name`, 
			`nx_goods_standardname`, 
			`nx_goods_brand`, 
			`nx_goods_place`, 
			`nx_goods_pinyin`, 
			`nx_goods_py`, 
			`nx_goods_father_id`, 
			`nx_goods_sort`,
		 	`nx_goods_detail`,
		 	`nx_goods_file`,
		 	`nx_goods_standard_amount`
		)
		values
		(
			#{nxGoodsId}, 
			#{nxGoodsName}, 
			#{nxGoodsStandardname}, 
			#{nxGoodsBrand}, 
			#{nxGoodsPlace}, 
			#{nxGoodsPinyin}, 
			#{nxGoodsPy}, 
			#{nxGoodsFatherId}, 
			#{nxGoodsSort},
		 	#{nxGoodsDetail},
		 	#{nxGoodsFile},
		 	#{nxGoodsStandardAmount}
		)
	</insert>
	 
	<update id="update" parameterType="com.nongxinle.entity.NxGoodsEntity">
		update nx_goods 
		<set>
			<if test="nxGoodsName != null">`nx_goods_name` = #{nxGoodsName}, </if>
			<if test="nxGoodsStandardname != null">`nx_goods_standardname` = #{nxGoodsStandardname}, </if>
			<if test="nxGoodsBrand != null">`nx_goods_brand` = #{nxGoodsBrand}, </if>
			<if test="nxGoodsPlace != null">`nx_goods_place` = #{nxGoodsPlace}, </if>
			<if test="nxGoodsPinyin != null">`nx_goods_pinyin` = #{nxGoodsPinyin}, </if>
			<if test="nxGoodsPy != null">`nx_goods_py` = #{nxGoodsPy}, </if>
			<if test="nxGoodsFatherId != null">`nx_goods_father_id` = #{nxGoodsFatherId}, </if>
			<if test="nxGoodsDetail != null">`nx_goods_detail` = #{nxGoodsDetail}, </if>
			<if test="nxGoodsStandardAmount != null">`nx_goods_standard_amount` = #{nxGoodsStandardAmount}, </if>
			<if test="nxGoodsSort != null">`nx_goods_sort` = #{nxGoodsSort}</if>
		</set>
		where nx_goods_id = #{nxGoodsId}
	</update>
	
	<delete id="delete">
		delete from nx_goods where nx_goods_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from nx_goods where nx_goods_id in 
		<foreach item="nxGoodsId" collection="array" open="(" separator="," close=")">
			#{nxGoodsId}
		</foreach>
	</delete>

</mapper>